package example.nz.org.take.compiler.userv.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Mon Aug 20 21:59:11 NZST 2007
 */
@SuppressWarnings("unchecked")
class KBFragement_neg_equals_11 {
    /**
     * Method generated for query equals[in,in]
     * @param slot1 input parameter generated from slot 0
     * @param slot2 input parameter generated from slot 1
     * @return an iterator for instances of _equals
    */
    public static ResultSet<_equals> neg_equals_11(
        final java.lang.String slot1, final java.lang.Object slot2) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<_equals> _result = new ResultSet(KBFragement_neg_equals_11.neg_equals_11(
                    slot1, slot2, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query equals[in,in]
     * @param source
     * @param target
     * @return an iterator
     * code generated using velocity template nz/org/take/compiler/reference/JPredicate_11_neg.vm
    */
    static ResourceIterator<_equals> neg_equals_11(
        final java.lang.String slot1, final java.lang.Object slot2,
        final DerivationController _derivation) {
        _derivation.log("public boolean java.lang.String.equals(java.lang.Object)",
            DerivationController.JAVA_METHOD);

        if (!slot1.equals(slot2)) {
            _equals result = new _equals();
            result.slot1 = slot1;
            result.slot2 = slot2;

            return new SingletonIterator<_equals>(result);
        }

        return EmptyIterator.DEFAULT;
    }
}
