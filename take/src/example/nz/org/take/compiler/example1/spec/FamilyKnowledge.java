package example.nz.org.take.compiler.example1.spec;
import nz.org.take.rt.*;
/**
 * Interface generated by the take compiler. 
 * @version Wed May 23 20:52:05 NZST 2007
 */
@SuppressWarnings("unchecked")
public interface FamilyKnowledge{
/**
 * Method generated for query /is_father_of[in,out]
 * @param son input parameter generated from slot 0
 * @return an iterator for instances of IsFatherOf
*/
public ResultSet<IsFatherOf> getFather(final example.nz.org.take.compiler.example1.Person son)
;
/**
 * Method generated for query /is_father_of[out,in]
 * @param father input parameter generated from slot 1
 * @return an iterator for instances of IsFatherOf
*/
public ResultSet<IsFatherOf> getSons(final example.nz.org.take.compiler.example1.Person father)
;
/**
 * Method generated for query /is_grandfather_of[in,out]
 * @param grandson input parameter generated from slot 0
 * @return an iterator for instances of IsGrandfatherOf
*/
public ResultSet<IsGrandfatherOf> getGrandfather(final example.nz.org.take.compiler.example1.Person grandson)
;
/**
 * Method generated for query /is_grandfather_of[out,in]
 * @param grandfather input parameter generated from slot 1
 * @return an iterator for instances of IsGrandfatherOf
*/
public ResultSet<IsGrandfatherOf> getGrandchildren(final example.nz.org.take.compiler.example1.Person grandfather)
;
}
