package example.nz.org.take.r2ml.eurent.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Wed Nov 21 16:25:55 GMT+01:00 2007
 */
@SuppressWarnings("unchecked")
class KBFragement_storedAt_11 {
    /**
     * Method generated for query storedAt[in,in]
     * @param rentalCar input parameter generated from slot 0
     * @param branch input parameter generated from slot 1
     * @return an iterator for instances of storedAt
    */
    public static ResultSet<storedAt> storedAt_11(
        final example.nz.org.take.r2ml.eurent.RentalCar rentalCar,
        final example.nz.org.take.r2ml.eurent.Branch branch) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<storedAt> _result = new ResultSet(KBFragement_storedAt_11.storedAt_11(
                    rentalCar, branch, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query storedAt[in,in]
     * @param source
     * @param target
     * @return an iterator
     * code generated using velocity template PropertyPredicateONE2ONE_11.vm
    */
    static ResourceIterator<storedAt> storedAt_11(
        final example.nz.org.take.r2ml.eurent.RentalCar source,
        final example.nz.org.take.r2ml.eurent.Branch target,
        final DerivationController _derivation) {
        _derivation.log("property storedAt",
            DerivationController.BEAN_PROPERTY, source, target);

        if (target.equals(source.getStoredAt())) {
            storedAt result = new storedAt();
            result.rentalCar = source;
            result.branch = target;

            return new SingletonIterator<storedAt>(result);
        }

        return EmptyIterator.DEFAULT;
    }
}
