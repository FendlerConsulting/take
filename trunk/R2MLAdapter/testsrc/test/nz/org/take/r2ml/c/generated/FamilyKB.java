package test.nz.org.take.r2ml.c.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Tue Nov 20 16:02:03 GMT+01:00 2007
 */
@SuppressWarnings("unchecked")
public class FamilyKB {
    private static java.util.Map<String, java.util.Map<String, String>> _annotations =
        null;

    /**
    * Method that can be used to query annotations at runtime.
    * @param id the id of the rule (or other knowledge element)
    * @return a map of annotations (string-string mappings)
    * code generated using velocity template LocalAnnotationMethod.vm
    */
    public java.util.Map<String, String> getAnnotations(String id) {
        if (_annotations == null) {
            synchronized (FamilyKB.class) {
                if (_annotations == null) {
                    java.beans.XMLDecoder decoder = new java.beans.XMLDecoder(new java.io.BufferedInputStream(
                                FamilyKB.class.getResourceAsStream(
                                    "/test/nz/org/take/r2ml/c/generated/annotations.xml")));
                    _annotations = (java.util.Map<String, java.util.Map<String, String>>) decoder.readObject();
                    decoder.close();
                }
            }
        }

        return _annotations.get(id);
    }

    /**
     * Method that can be used to query global annotations at runtime.
     * Global annotations are attached to the knowledge base, not to
     * a particular element (rule,..).
     * @return a map of annotations (string-string mappings)
     * code generated using velocity template GlobalAnnotationMethod.vm
    */
    public java.util.Map<String, String> getAnnotations() {
        return getAnnotations("___global_annotations");
    }

    /**
    * Method generated for query /isFamily[in,in]
    * @param slot1 input parameter generated from slot 0
    * @param slot2 input parameter generated from slot 1
    * @return an iterator for instances of isFamily
    */
    public ResultSet<isFamily> isFamily_11(
        final test.nz.org.take.r2ml.c.Person slot1,
        final test.nz.org.take.r2ml.c.Person slot2) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<isFamily> _result = new ResultSet(KBFragement_isFamily_11.isFamily_11(
                    slot1, slot2, _derivation), _derivation);

        return _result;
    }
}
