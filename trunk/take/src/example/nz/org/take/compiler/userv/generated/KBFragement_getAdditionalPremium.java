package example.nz.org.take.compiler.userv.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Fri Sep 07 12:07:28 NZST 2007
 */
@SuppressWarnings("unchecked")
class KBFragement_getAdditionalPremium {
    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    public static ResultSet<AdditionalPremium> getAdditionalPremium(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<AdditionalPremium> _result = new ResultSet(KBFragement_getAdditionalPremium.getAdditionalPremium(
                    policy, car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    static ResourceIterator<AdditionalPremium> getAdditionalPremium(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        final int _derivationlevel = _derivation.getDepth();
        ResourceIterator<AdditionalPremium> result = new IteratorChain<AdditionalPremium>(8) {
                public Object getIteratorOrObject(int pos) {
                    switch (pos) {
                    //  IF /isNew(<car>) THEN /additionalPremium(<policy>,<car>,400)
                    case 0:
                        return getAdditionalPremium_0(policy, car,
                            _derivation.reset(_derivationlevel));

                    //  IF less_than_ii(getAge(<car>),5) AND /isNew(<car>) THEN /additionalPremium(<policy>,<car>,300)
                    case 1:
                        return getAdditionalPremium_1(policy, car,
                            _derivation.reset(_derivationlevel));

                    //  IF greater_than_or_equal_ii(getAge(<car>),5) AND less_than_or_equal_ii(getAge(<car>),10) THEN /additionalPremium(<policy>,<car>,250)
                    case 2:
                        return getAdditionalPremium_2(policy, car,
                            _derivation.reset(_derivationlevel));

                    //  IF includesUninsuredMotoristCoverage(<policy>) THEN /additionalPremium(<policy>,<car>,300)
                    case 3:
                        return getAdditionalPremium_3(policy, car,
                            _derivation.reset(_derivationlevel));

                    //  IF includesMedicalCoverage(<policy>) THEN /additionalPremium(<policy>,<car>,600)
                    case 4:
                        return getAdditionalPremium_4(policy, car,
                            _derivation.reset(_derivationlevel));

                    //  IF /potentialOccupantInjuryRating(<car>,extremely high) THEN /additionalPremium(<policy>,<car>,1000)
                    case 5:
                        return getAdditionalPremium_5(policy, car,
                            _derivation.reset(_derivationlevel));

                    //  IF /potentialOccupantInjuryRating(<car>,high) THEN /additionalPremium(<policy>,<car>,500)
                    case 6:
                        return getAdditionalPremium_6(policy, car,
                            _derivation.reset(_derivationlevel));

                    //  IF /potentialTheftRating(<car>,high) THEN /additionalPremium(<policy>,<car>,500)
                    case 7:
                        return getAdditionalPremium_7(policy, car,
                            _derivation.reset(_derivationlevel));

                    default:
                        return EmptyIterator.DEFAULT;
                    } // switch(pos)
                } // getIterator()

                public String getRuleRef(int pos) {
                    switch (pos) {
                    //  IF /isNew(<car>) THEN /additionalPremium(<policy>,<car>,400)
                    case 0:
                        return "AP_04";

                    //  IF less_than_ii(getAge(<car>),5) AND /isNew(<car>) THEN /additionalPremium(<policy>,<car>,300)
                    case 1:
                        return "AP_07";

                    //  IF greater_than_or_equal_ii(getAge(<car>),5) AND less_than_or_equal_ii(getAge(<car>),10) THEN /additionalPremium(<policy>,<car>,250)
                    case 2:
                        return "AP_08";

                    //  IF includesUninsuredMotoristCoverage(<policy>) THEN /additionalPremium(<policy>,<car>,300)
                    case 3:
                        return "AP_09";

                    //  IF includesMedicalCoverage(<policy>) THEN /additionalPremium(<policy>,<car>,600)
                    case 4:
                        return "AP_10";

                    //  IF /potentialOccupantInjuryRating(<car>,extremely high) THEN /additionalPremium(<policy>,<car>,1000)
                    case 5:
                        return "AP_11";

                    //  IF /potentialOccupantInjuryRating(<car>,high) THEN /additionalPremium(<policy>,<car>,500)
                    case 6:
                        return "AP_12";

                    //  IF /potentialTheftRating(<car>,high) THEN /additionalPremium(<policy>,<car>,500)
                    case 7:
                        return "AP_13";

                    default:
                        return "";
                    } // switch(pos)
                } // getRuleRef()
            };

        return result;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    private static ResourceIterator<AdditionalPremium> getAdditionalPremium_0(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AP_04", DerivationController.RULE, policy, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF /isNew(<car>) THEN /additionalPremium(<policy>,<car>,400)
        class bindingsInRule41 {
            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p1;

            // Property generated for term  "<policy>"
            example.nz.org.take.compiler.userv.domainmodel.Policy p2;

            // Property generated for term  "400"
            java.lang.Integer p3;
        }
        ;

        final bindingsInRule41 bindings = new bindingsInRule41();
        bindings.p3 = 400;
        bindings.p2 = policy;
        bindings.p1 = car;

        // code for prereq /isNew(<car>)
        final ResourceIterator<isNew> iterator1 = KBFragement_isNew_1.isNew_1(car,
                _derivation.increaseDepth());

        // code for prereq /additionalPremium(<policy>,<car>,400)
        final ResourceIterator<AdditionalPremium> iterator2 = new NestedIterator<isNew, AdditionalPremium>(iterator1) {
                public ResourceIterator<AdditionalPremium> getNextIterator(
                    isNew object) {
                    bindings.p1 = object.slot1;

                    return new SingletonIterator(new AdditionalPremium(
                            bindings.p2, bindings.p1, bindings.p3));
                }
            };

        return iterator2;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    private static ResourceIterator<AdditionalPremium> getAdditionalPremium_1(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AP_07", DerivationController.RULE, policy, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF less_than_ii(getAge(<car>),5) AND /isNew(<car>) THEN /additionalPremium(<policy>,<car>,300)
        class bindingsInRule42 {
            // Property generated for term  "getAge(<car>)"
            int p1;

            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p2;

            // Property generated for term  "5"
            java.lang.Integer p3;

            // Property generated for term  "<policy>"
            example.nz.org.take.compiler.userv.domainmodel.Policy p4;

            // Property generated for term  "300"
            java.lang.Integer p5;
        }
        ;

        final bindingsInRule42 bindings = new bindingsInRule42();
        bindings.p3 = 5;
        bindings.p1 = car.getAge();
        bindings.p4 = policy;
        bindings.p2 = car;
        bindings.p5 = 300;

        // code for prereq less_than_ii(getAge(<car>),5)
        final ResourceIterator<less_than_ii> iterator1 = KBFragement_less_than_ii_11.less_than_ii_11(car.getAge(),
                5, _derivation.increaseDepth());

        // code for prereq /isNew(<car>)
        final ResourceIterator<not_isNew> iterator2 = new NestedIterator<less_than_ii, not_isNew>(iterator1) {
                public ResourceIterator<not_isNew> getNextIterator(
                    less_than_ii object) {
                    bindings.p1 = object.slot1;
                    bindings.p3 = 5;

                    return KBFragement_not_isNew_1.not_isNew_1(bindings.p2,
                        _derivation.increaseDepth());
                }
            };

        // code for prereq /additionalPremium(<policy>,<car>,300)
        final ResourceIterator<AdditionalPremium> iterator3 = new NestedIterator<not_isNew, AdditionalPremium>(iterator2) {
                public ResourceIterator<AdditionalPremium> getNextIterator(
                    not_isNew object) {
                    bindings.p2 = object.slot1;

                    return new SingletonIterator(new AdditionalPremium(
                            bindings.p4, bindings.p2, bindings.p5));
                }
            };

        return iterator3;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    private static ResourceIterator<AdditionalPremium> getAdditionalPremium_2(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AP_08", DerivationController.RULE, policy, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF greater_than_or_equal_ii(getAge(<car>),5) AND less_than_or_equal_ii(getAge(<car>),10) THEN /additionalPremium(<policy>,<car>,250)
        class bindingsInRule43 {
            // Property generated for term  "getAge(<car>)"
            int p1;

            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p2;

            // Property generated for term  "5"
            java.lang.Integer p3;

            // Property generated for term  "getAge(<car>)"
            int p4;

            // Property generated for term  "10"
            java.lang.Integer p5;

            // Property generated for term  "<policy>"
            example.nz.org.take.compiler.userv.domainmodel.Policy p6;

            // Property generated for term  "250"
            java.lang.Integer p7;
        }
        ;

        final bindingsInRule43 bindings = new bindingsInRule43();
        bindings.p3 = 5;
        bindings.p1 = car.getAge();
        bindings.p4 = car.getAge();
        bindings.p6 = policy;
        bindings.p7 = 250;
        bindings.p2 = car;
        bindings.p5 = 10;

        // code for prereq greater_than_or_equal_ii(getAge(<car>),5)
        final ResourceIterator<greater_than_or_equal_ii> iterator1 = KBFragement_greater_than_or_equal_ii_11.greater_than_or_equal_ii_11(car.getAge(),
                5, _derivation.increaseDepth());

        // code for prereq less_than_or_equal_ii(getAge(<car>),10)
        final ResourceIterator<less_than_or_equal_ii> iterator2 = new NestedIterator<greater_than_or_equal_ii, less_than_or_equal_ii>(iterator1) {
                public ResourceIterator<less_than_or_equal_ii> getNextIterator(
                    greater_than_or_equal_ii object) {
                    bindings.p1 = object.slot1;
                    bindings.p3 = 5;

                    return KBFragement_less_than_or_equal_ii_11.less_than_or_equal_ii_11(bindings.p4,
                        bindings.p5, _derivation.increaseDepth());
                }
            };

        // code for prereq /additionalPremium(<policy>,<car>,250)
        final ResourceIterator<AdditionalPremium> iterator3 = new NestedIterator<less_than_or_equal_ii, AdditionalPremium>(iterator2) {
                public ResourceIterator<AdditionalPremium> getNextIterator(
                    less_than_or_equal_ii object) {
                    bindings.p4 = object.slot1;
                    bindings.p5 = 10;

                    return new SingletonIterator(new AdditionalPremium(
                            bindings.p6, bindings.p2, bindings.p7));
                }
            };

        return iterator3;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    private static ResourceIterator<AdditionalPremium> getAdditionalPremium_3(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AP_09", DerivationController.RULE, policy, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF includesUninsuredMotoristCoverage(<policy>) THEN /additionalPremium(<policy>,<car>,300)
        class bindingsInRule44 {
            // Property generated for term  "<policy>"
            example.nz.org.take.compiler.userv.domainmodel.Policy p1;

            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p2;

            // Property generated for term  "300"
            java.lang.Integer p3;
        }
        ;

        final bindingsInRule44 bindings = new bindingsInRule44();
        bindings.p1 = policy;
        bindings.p2 = car;
        bindings.p3 = 300;

        // code for prereq includesUninsuredMotoristCoverage(<policy>)
        final ResourceIterator<includesUninsuredMotoristCoverage> iterator1 = KBFragement_includesUninsuredMotoristCoverage_1.includesUninsuredMotoristCoverage_1(policy,
                _derivation.increaseDepth());

        // code for prereq /additionalPremium(<policy>,<car>,300)
        final ResourceIterator<AdditionalPremium> iterator2 = new NestedIterator<includesUninsuredMotoristCoverage, AdditionalPremium>(iterator1) {
                public ResourceIterator<AdditionalPremium> getNextIterator(
                    includesUninsuredMotoristCoverage object) {
                    bindings.p1 = object.slot1;

                    return new SingletonIterator(new AdditionalPremium(
                            bindings.p1, bindings.p2, bindings.p3));
                }
            };

        return iterator2;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    private static ResourceIterator<AdditionalPremium> getAdditionalPremium_4(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AP_10", DerivationController.RULE, policy, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF includesMedicalCoverage(<policy>) THEN /additionalPremium(<policy>,<car>,600)
        class bindingsInRule45 {
            // Property generated for term  "<policy>"
            example.nz.org.take.compiler.userv.domainmodel.Policy p1;

            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p2;

            // Property generated for term  "600"
            java.lang.Integer p3;
        }
        ;

        final bindingsInRule45 bindings = new bindingsInRule45();
        bindings.p3 = 600;
        bindings.p1 = policy;
        bindings.p2 = car;

        // code for prereq includesMedicalCoverage(<policy>)
        final ResourceIterator<includesMedicalCoverage> iterator1 = KBFragement_includesMedicalCoverage_1.includesMedicalCoverage_1(policy,
                _derivation.increaseDepth());

        // code for prereq /additionalPremium(<policy>,<car>,600)
        final ResourceIterator<AdditionalPremium> iterator2 = new NestedIterator<includesMedicalCoverage, AdditionalPremium>(iterator1) {
                public ResourceIterator<AdditionalPremium> getNextIterator(
                    includesMedicalCoverage object) {
                    bindings.p1 = object.slot1;

                    return new SingletonIterator(new AdditionalPremium(
                            bindings.p1, bindings.p2, bindings.p3));
                }
            };

        return iterator2;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    private static ResourceIterator<AdditionalPremium> getAdditionalPremium_5(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AP_11", DerivationController.RULE, policy, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF /potentialOccupantInjuryRating(<car>,extremely high) THEN /additionalPremium(<policy>,<car>,1000)
        class bindingsInRule46 {
            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p1;

            // Property generated for term  "extremely high"
            java.lang.String p2;

            // Property generated for term  "<policy>"
            example.nz.org.take.compiler.userv.domainmodel.Policy p3;

            // Property generated for term  "1000"
            java.lang.Integer p4;
        }
        ;

        final bindingsInRule46 bindings = new bindingsInRule46();
        bindings.p4 = 1000;
        bindings.p2 = "extremely high";
        bindings.p3 = policy;
        bindings.p1 = car;

        // code for prereq /potentialOccupantInjuryRating(<car>,extremely high)
        final ResourceIterator<PotentialOccupantInjuryRating> iterator1 = KBFragement_getPotentialOccupantInjuryRating.getPotentialOccupantInjuryRating(car,
                "extremely high", _derivation.increaseDepth());

        // code for prereq /additionalPremium(<policy>,<car>,1000)
        final ResourceIterator<AdditionalPremium> iterator2 = new NestedIterator<PotentialOccupantInjuryRating, AdditionalPremium>(iterator1) {
                public ResourceIterator<AdditionalPremium> getNextIterator(
                    PotentialOccupantInjuryRating object) {
                    bindings.p1 = object.car;
                    bindings.p2 = "extremely high";

                    return new SingletonIterator(new AdditionalPremium(
                            bindings.p3, bindings.p1, bindings.p4));
                }
            };

        return iterator2;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    private static ResourceIterator<AdditionalPremium> getAdditionalPremium_6(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AP_12", DerivationController.RULE, policy, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF /potentialOccupantInjuryRating(<car>,high) THEN /additionalPremium(<policy>,<car>,500)
        class bindingsInRule47 {
            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p1;

            // Property generated for term  "high"
            java.lang.String p2;

            // Property generated for term  "<policy>"
            example.nz.org.take.compiler.userv.domainmodel.Policy p3;

            // Property generated for term  "500"
            java.lang.Integer p4;
        }
        ;

        final bindingsInRule47 bindings = new bindingsInRule47();
        bindings.p2 = "high";
        bindings.p3 = policy;
        bindings.p1 = car;
        bindings.p4 = 500;

        // code for prereq /potentialOccupantInjuryRating(<car>,high)
        final ResourceIterator<PotentialOccupantInjuryRating> iterator1 = KBFragement_getPotentialOccupantInjuryRating.getPotentialOccupantInjuryRating(car,
                "high", _derivation.increaseDepth());

        // code for prereq /additionalPremium(<policy>,<car>,500)
        final ResourceIterator<AdditionalPremium> iterator2 = new NestedIterator<PotentialOccupantInjuryRating, AdditionalPremium>(iterator1) {
                public ResourceIterator<AdditionalPremium> getNextIterator(
                    PotentialOccupantInjuryRating object) {
                    bindings.p1 = object.car;
                    bindings.p2 = "high";

                    return new SingletonIterator(new AdditionalPremium(
                            bindings.p3, bindings.p1, bindings.p4));
                }
            };

        return iterator2;
    }

    /**
     * Method generated for query /additionalPremium[in,in,out]
     * @param policy input parameter generated from slot 0
     * @param car input parameter generated from slot 1
     * @return an iterator for instances of AdditionalPremium
    */
    private static ResourceIterator<AdditionalPremium> getAdditionalPremium_7(
        final example.nz.org.take.compiler.userv.domainmodel.Policy policy,
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final DerivationController _derivation) {
        _derivation.log("AP_13", DerivationController.RULE, policy, car,
            DerivationController.NIL);

        // Variable bindings in rule:  IF /potentialTheftRating(<car>,high) THEN /additionalPremium(<policy>,<car>,500)
        class bindingsInRule48 {
            // Property generated for term  "<car>"
            example.nz.org.take.compiler.userv.domainmodel.Car p1;

            // Property generated for term  "high"
            java.lang.String p2;

            // Property generated for term  "<policy>"
            example.nz.org.take.compiler.userv.domainmodel.Policy p3;

            // Property generated for term  "500"
            java.lang.Integer p4;
        }
        ;

        final bindingsInRule48 bindings = new bindingsInRule48();
        bindings.p2 = "high";
        bindings.p3 = policy;
        bindings.p1 = car;
        bindings.p4 = 500;

        // code for prereq /potentialTheftRating(<car>,high)
        final ResourceIterator<PotentialTheftRating> iterator1 = KBFragement_getPotenialTheftRating.getPotenialTheftRating(car,
                "high", _derivation.increaseDepth());

        // code for prereq /additionalPremium(<policy>,<car>,500)
        final ResourceIterator<AdditionalPremium> iterator2 = new NestedIterator<PotentialTheftRating, AdditionalPremium>(iterator1) {
                public ResourceIterator<AdditionalPremium> getNextIterator(
                    PotentialTheftRating object) {
                    bindings.p1 = object.car;
                    bindings.p2 = "high";

                    return new SingletonIterator(new AdditionalPremium(
                            bindings.p3, bindings.p1, bindings.p4));
                }
            };

        return iterator2;
    }
}
