package example.nz.org.take.compiler.userv.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Wed Sep 05 23:20:43 NZST 2007
 */
@SuppressWarnings("unchecked")
public class UservRules {
    /**
     * Method generated for query /potentialTheftRating[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PotentialTheftRating
    */
    public ResultSet<PotentialTheftRating> getPotenialTheftRating(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<PotentialTheftRating> _result = new ResultSet(KBFragement_getPotenialTheftRating.getPotenialTheftRating(
                    car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /potentialOccupantInjuryRating[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of PotentialOccupantInjuryRating
    */
    public ResultSet<PotentialOccupantInjuryRating> getPotentialOccupantInjuryRating(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<PotentialOccupantInjuryRating> _result = new ResultSet(KBFragement_getPotentialOccupantInjuryRating.getPotentialOccupantInjuryRating(
                    car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /autoEligibility[in,out]
     * @param car input parameter generated from slot 0
     * @return an iterator for instances of AutoEligibility
    */
    public ResultSet<AutoEligibility> getAutoEligibility(
        final example.nz.org.take.compiler.userv.domainmodel.Car car) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<AutoEligibility> _result = new ResultSet(KBFragement_getAutoEligibility.getAutoEligibility(
                    car, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /driverCategory[in,out]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of DriverCategory
    */
    public ResultSet<DriverCategory> getDriverCategory(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<DriverCategory> _result = new ResultSet(KBFragement_getDriverCategory.getDriverCategory(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /isEligible[in]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of DriverEligibility
    */
    public ResultSet<DriverEligibility> getDriverEligibility(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<DriverEligibility> _result = new ResultSet(KBFragement_getDriverEligibility.getDriverEligibility(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /isHighRiskDriver[in]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of HighRiskDriver
    */
    public ResultSet<HighRiskDriver> isHighRiskDriver(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<HighRiskDriver> _result = new ResultSet(KBFragement_isHighRiskDriver.isHighRiskDriver(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /hasTrainingCertification[in]
     * @param driver input parameter generated from slot 0
     * @return an iterator for instances of TrainedDriver
    */
    public ResultSet<TrainedDriver> hasTrainingCertification(
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<TrainedDriver> _result = new ResultSet(KBFragement_hasTrainingCertification.hasTrainingCertification(
                    driver, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /policyEligibilityScore[in,in,out]
     * @param car input parameter generated from slot 0
     * @param driver input parameter generated from slot 1
     * @return an iterator for instances of PolicyEligibilityScore
    */
    public ResultSet<PolicyEligibilityScore> getPolicyEligibilityScore(
        final example.nz.org.take.compiler.userv.domainmodel.Car car,
        final example.nz.org.take.compiler.userv.domainmodel.Driver driver) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<PolicyEligibilityScore> _result = new ResultSet(KBFragement_getPolicyEligibilityScore.getPolicyEligibilityScore(
                    car, driver, _derivation), _derivation);

        return _result;
    }
}
