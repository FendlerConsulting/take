package example.nz.org.take.compiler.userv.generated;

import nz.org.take.rt.*;


/**
 * Class generated by the take compiler.
 * @version Mon Aug 20 21:59:11 NZST 2007
 */
@SuppressWarnings("unchecked")
class KBFragement_neg_hasHasRollBar_1 {
    /**
     * Method generated for query /hasHasRollBar[in]
     * @param slot1 input parameter generated from slot 0
     * @return an iterator for instances of _hasHasRollBar
    */
    public static ResultSet<_hasHasRollBar> neg_hasHasRollBar_1(
        final example.nz.org.take.compiler.userv.domainmodel.Car slot1) {
        DerivationController _derivation = new DefaultDerivationController();
        ResultSet<_hasHasRollBar> _result = new ResultSet(KBFragement_neg_hasHasRollBar_1.neg_hasHasRollBar_1(
                    slot1, _derivation), _derivation);

        return _result;
    }

    /**
     * Method generated for query /hasHasRollBar[in]
     * @param slot1 input parameter generated from slot 0
     * @return an iterator for instances of _hasHasRollBar
    */
    static ResourceIterator<_hasHasRollBar> neg_hasHasRollBar_1(
        final example.nz.org.take.compiler.userv.domainmodel.Car slot1,
        final DerivationController _derivation) {
        final int _derivationlevel = _derivation.getDepth();
        ResourceIterator<_hasHasRollBar> result = new IteratorChain<_hasHasRollBar>(0) {
                public Object getIteratorOrObject(int pos) {
                    switch (pos) {
                    default:
                        return EmptyIterator.DEFAULT;
                    } // switch(pos)
                } // getIterator()

                public String getRuleRef(int pos) {
                    switch (pos) {
                    default:
                        return "";
                    } // switch(pos)
                } // getRuleRef()
            };

        return result;
    }
}
